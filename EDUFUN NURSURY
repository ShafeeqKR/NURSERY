{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPn5xKEJHugilkWp4paowfp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["IMPORTING THE LIBRARIES"],"metadata":{"id":"RGj25Z90F2Af"}},{"cell_type":"code","execution_count":81,"metadata":{"id":"oCI5lK7tFuJB","executionInfo":{"status":"ok","timestamp":1669354776337,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","%matplotlib inline"]},{"cell_type":"code","source":["!wget https://www.dropbox.com/s/k2s14n5dp0phcyg/nursery.csv -nv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mz02jNXeGFlJ","executionInfo":{"status":"ok","timestamp":1669354778641,"user_tz":-330,"elapsed":1470,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"f427f9f0-1f3d-4a4f-9e3d-099f44f1a796"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-11-25 05:39:37 URL:https://ucf6436713ab81f61e943bf3c1bd.dl.dropboxusercontent.com/cd/0/inline/BxY2ZbLs0HRQP4SM5NuRVBYHU8KVOsUdtt1nHMvIqoCNpmyNQgxUmrL3qIl7gjb94yXM4OBKv7u1LMcwENcE7ZV85kjFYLnaewEjhOe2__qj1HOMpL_V_L8AW_4RyCFa8EjaRN9fT1TElie_Te-2N8R2GYV7X8gp6a_lVGgxn_waAQ/file [1059371/1059371] -> \"nursery.csv.1\" [1]\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('nursery.csv',header=None)"],"metadata":{"id":"BoK6YseAGKNE","executionInfo":{"status":"ok","timestamp":1669354779115,"user_tz":-330,"elapsed":34,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yOKqJdlRGRvH","executionInfo":{"status":"ok","timestamp":1669354779133,"user_tz":-330,"elapsed":51,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"404374dc-d2c0-48bd-defc-09474bdb1ad6"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       0       1         2  3           4           5              6  \\\n","0  usual  proper  complete  1  convenient  convenient        nonprob   \n","1  usual  proper  complete  1  convenient  convenient        nonprob   \n","2  usual  proper  complete  1  convenient  convenient        nonprob   \n","3  usual  proper  complete  1  convenient  convenient  slightly_prob   \n","4  usual  proper  complete  1  convenient  convenient  slightly_prob   \n","\n","             7          8  \n","0  recommended  recommend  \n","1     priority   priority  \n","2    not_recom  not_recom  \n","3  recommended  recommend  \n","4     priority   priority  "],"text/html":["\n","  <div id=\"df-86c6ca86-3aea-4b26-85ed-4acb01a4b075\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86c6ca86-3aea-4b26-85ed-4acb01a4b075')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-86c6ca86-3aea-4b26-85ed-4acb01a4b075 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-86c6ca86-3aea-4b26-85ed-4acb01a4b075');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTAUOcWEGTkM","executionInfo":{"status":"ok","timestamp":1669354779135,"user_tz":-330,"elapsed":50,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"b513f8f5-4ad7-4bbc-d09b-57b156c35bdb"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(12960, 9)"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QrAhN8jEGWNG","executionInfo":{"status":"ok","timestamp":1669354779711,"user_tz":-330,"elapsed":16,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"552ac991-70b4-4195-ea53-d137331c2fea"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype='int64')"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["headers = ['parents','has_nurs','form','children','housing','finance','social','health','NURSERY']"],"metadata":{"id":"YT-_-RgfGZQb","executionInfo":{"status":"ok","timestamp":1669354780509,"user_tz":-330,"elapsed":10,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["df.columns=headers"],"metadata":{"id":"0GVxsFl_GzgR","executionInfo":{"status":"ok","timestamp":1669354781422,"user_tz":-330,"elapsed":23,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xqZ-gijaG261","executionInfo":{"status":"ok","timestamp":1669354781945,"user_tz":-330,"elapsed":24,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"a68e6f8c-0a4e-48dc-94b9-7c2bcd536199"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  parents has_nurs      form children     housing     finance         social  \\\n","0   usual   proper  complete        1  convenient  convenient        nonprob   \n","1   usual   proper  complete        1  convenient  convenient        nonprob   \n","2   usual   proper  complete        1  convenient  convenient        nonprob   \n","3   usual   proper  complete        1  convenient  convenient  slightly_prob   \n","4   usual   proper  complete        1  convenient  convenient  slightly_prob   \n","\n","        health    NURSERY  \n","0  recommended  recommend  \n","1     priority   priority  \n","2    not_recom  not_recom  \n","3  recommended  recommend  \n","4     priority   priority  "],"text/html":["\n","  <div id=\"df-8e65becd-950e-466b-95cb-b1af576ca068\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>parents</th>\n","      <th>has_nurs</th>\n","      <th>form</th>\n","      <th>children</th>\n","      <th>housing</th>\n","      <th>finance</th>\n","      <th>social</th>\n","      <th>health</th>\n","      <th>NURSERY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e65becd-950e-466b-95cb-b1af576ca068')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8e65becd-950e-466b-95cb-b1af576ca068 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8e65becd-950e-466b-95cb-b1af576ca068');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F2uNTbhhG4XI","executionInfo":{"status":"ok","timestamp":1669354782646,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"5e76f22c-5b09-4d89-a047-986eccd14659"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['parents', 'has_nurs', 'form', 'children', 'housing', 'finance',\n","       'social', 'health', 'NURSERY'],\n","      dtype='object')"]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["GENRAL DATA INFORMATION"],"metadata":{"id":"shcZitdcHBWg"}},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HpujwWF1G8HV","executionInfo":{"status":"ok","timestamp":1669354783677,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"e778c17b-a177-4f0b-d56b-802c9e362f10"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 12960 entries, 0 to 12959\n","Data columns (total 9 columns):\n"," #   Column    Non-Null Count  Dtype \n","---  ------    --------------  ----- \n"," 0   parents   12960 non-null  object\n"," 1   has_nurs  12960 non-null  object\n"," 2   form      12960 non-null  object\n"," 3   children  12960 non-null  object\n"," 4   housing   12960 non-null  object\n"," 5   finance   12960 non-null  object\n"," 6   social    12960 non-null  object\n"," 7   health    12960 non-null  object\n"," 8   NURSERY   12960 non-null  object\n","dtypes: object(9)\n","memory usage: 911.4+ KB\n"]}]},{"cell_type":"code","source":["# checking for missing values"],"metadata":{"id":"ZqKAFL2MHGAD","executionInfo":{"status":"ok","timestamp":1669354784380,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WXrQiuBVHNOi","executionInfo":{"status":"ok","timestamp":1669354785330,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"2b16518f-1439-4129-f05c-f59a7373f02a"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["parents     0\n","has_nurs    0\n","form        0\n","children    0\n","housing     0\n","finance     0\n","social      0\n","health      0\n","NURSERY     0\n","dtype: int64"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["# there is no missing values"],"metadata":{"id":"ngw5nvkIHPPv","executionInfo":{"status":"ok","timestamp":1669354785836,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":94,"outputs":[]},{"cell_type":"markdown","source":["EXPLORING THE DATA USING EDA"],"metadata":{"id":"SVfzvgJ2HaOl"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_06Iba9sHSZ8","executionInfo":{"status":"ok","timestamp":1669354787370,"user_tz":-330,"elapsed":28,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"1e94b713-0d52-45c3-966d-bcbe7992e449"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  parents has_nurs      form children     housing     finance         social  \\\n","0   usual   proper  complete        1  convenient  convenient        nonprob   \n","1   usual   proper  complete        1  convenient  convenient        nonprob   \n","2   usual   proper  complete        1  convenient  convenient        nonprob   \n","3   usual   proper  complete        1  convenient  convenient  slightly_prob   \n","4   usual   proper  complete        1  convenient  convenient  slightly_prob   \n","\n","        health    NURSERY  \n","0  recommended  recommend  \n","1     priority   priority  \n","2    not_recom  not_recom  \n","3  recommended  recommend  \n","4     priority   priority  "],"text/html":["\n","  <div id=\"df-02be03c0-c970-4580-9900-290599fb0388\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>parents</th>\n","      <th>has_nurs</th>\n","      <th>form</th>\n","      <th>children</th>\n","      <th>housing</th>\n","      <th>finance</th>\n","      <th>social</th>\n","      <th>health</th>\n","      <th>NURSERY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02be03c0-c970-4580-9900-290599fb0388')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-02be03c0-c970-4580-9900-290599fb0388 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-02be03c0-c970-4580-9900-290599fb0388');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["plt.figure(figsize=(15,7))\n","sns.countplot(df['parents'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":500},"id":"VVSU3fiAHfF3","executionInfo":{"status":"ok","timestamp":1669354788139,"user_tz":-330,"elapsed":20,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"c1f53209-c680-41c7-9a1e-73dbf2cc7288"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.figure(figsize=(15,7))\n","sns.countplot(df['NURSERY'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":500},"id":"sm7HLR_UH0RD","executionInfo":{"status":"ok","timestamp":1669354788753,"user_tz":-330,"elapsed":28,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"1eb20e63-c692-4a8f-f1c9-161503c60f6b"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df['NURSERY'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VA683SBwIpSl","executionInfo":{"status":"ok","timestamp":1669354789257,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"7ff89942-7fb6-4583-f570-a0d18726d7fc"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["not_recom     4320\n","priority      4266\n","spec_prior    4044\n","very_recom     328\n","recommend        2\n","Name: NURSERY, dtype: int64"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["for i in df.parents.unique():\n","  temp=df[df.parents==i]\n","  sns.countplot(temp.NURSERY,saturation=0.7)\n","  plt.title('parent type: %s')\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":985},"id":"iPnZ4Wk0Iwzc","executionInfo":{"status":"ok","timestamp":1669354791060,"user_tz":-330,"elapsed":812,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"c80e5d5a-3140-4b15-b30b-1875f580e0c9"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["for i in df.housing.unique():\n","  temp=df[df.housing==i]\n","  sns.countplot(temp.NURSERY,saturation=0.7)\n","  plt.title('housing type: %s')\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":985},"id":"k0xLPi0EJFCg","executionInfo":{"status":"ok","timestamp":1669354791564,"user_tz":-330,"elapsed":583,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"0c37253f-ede1-45d1-e723-e19fee4b77ed"},"execution_count":100,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["for i in df.health.unique():\n","  temp=df[df.health==i]\n","  sns.countplot(temp.NURSERY,saturation=0.7)\n","  plt.title('parent type: %s')\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":985},"id":"eaQwIOYKLvS-","executionInfo":{"status":"ok","timestamp":1669354792905,"user_tz":-330,"elapsed":786,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"c7e37f4f-5d94-4e32-8b54-e0c5c2707d7e"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Cc7Al5rAShjU","executionInfo":{"status":"ok","timestamp":1669354792911,"user_tz":-330,"elapsed":60,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"e7d2ce3d-d11b-4936-ad8f-2bdef5f0be93"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          parents   has_nurs      form children     housing     finance  \\\n","0           usual     proper  complete        1  convenient  convenient   \n","1           usual     proper  complete        1  convenient  convenient   \n","2           usual     proper  complete        1  convenient  convenient   \n","3           usual     proper  complete        1  convenient  convenient   \n","4           usual     proper  complete        1  convenient  convenient   \n","...           ...        ...       ...      ...         ...         ...   \n","12955  great_pret  very_crit    foster     more    critical      inconv   \n","12956  great_pret  very_crit    foster     more    critical      inconv   \n","12957  great_pret  very_crit    foster     more    critical      inconv   \n","12958  great_pret  very_crit    foster     more    critical      inconv   \n","12959  great_pret  very_crit    foster     more    critical      inconv   \n","\n","              social       health     NURSERY  \n","0            nonprob  recommended   recommend  \n","1            nonprob     priority    priority  \n","2            nonprob    not_recom   not_recom  \n","3      slightly_prob  recommended   recommend  \n","4      slightly_prob     priority    priority  \n","...              ...          ...         ...  \n","12955  slightly_prob     priority  spec_prior  \n","12956  slightly_prob    not_recom   not_recom  \n","12957    problematic  recommended  spec_prior  \n","12958    problematic     priority  spec_prior  \n","12959    problematic    not_recom   not_recom  \n","\n","[12960 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-54f605f8-ec14-4d7f-9fc2-57e23e1cd7b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>parents</th>\n","      <th>has_nurs</th>\n","      <th>form</th>\n","      <th>children</th>\n","      <th>housing</th>\n","      <th>finance</th>\n","      <th>social</th>\n","      <th>health</th>\n","      <th>NURSERY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>nonprob</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>recommended</td>\n","      <td>recommend</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>usual</td>\n","      <td>proper</td>\n","      <td>complete</td>\n","      <td>1</td>\n","      <td>convenient</td>\n","      <td>convenient</td>\n","      <td>slightly_prob</td>\n","      <td>priority</td>\n","      <td>priority</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12955</th>\n","      <td>great_pret</td>\n","      <td>very_crit</td>\n","      <td>foster</td>\n","      <td>more</td>\n","      <td>critical</td>\n","      <td>inconv</td>\n","      <td>slightly_prob</td>\n","      <td>priority</td>\n","      <td>spec_prior</td>\n","    </tr>\n","    <tr>\n","      <th>12956</th>\n","      <td>great_pret</td>\n","      <td>very_crit</td>\n","      <td>foster</td>\n","      <td>more</td>\n","      <td>critical</td>\n","      <td>inconv</td>\n","      <td>slightly_prob</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","    <tr>\n","      <th>12957</th>\n","      <td>great_pret</td>\n","      <td>very_crit</td>\n","      <td>foster</td>\n","      <td>more</td>\n","      <td>critical</td>\n","      <td>inconv</td>\n","      <td>problematic</td>\n","      <td>recommended</td>\n","      <td>spec_prior</td>\n","    </tr>\n","    <tr>\n","      <th>12958</th>\n","      <td>great_pret</td>\n","      <td>very_crit</td>\n","      <td>foster</td>\n","      <td>more</td>\n","      <td>critical</td>\n","      <td>inconv</td>\n","      <td>problematic</td>\n","      <td>priority</td>\n","      <td>spec_prior</td>\n","    </tr>\n","    <tr>\n","      <th>12959</th>\n","      <td>great_pret</td>\n","      <td>very_crit</td>\n","      <td>foster</td>\n","      <td>more</td>\n","      <td>critical</td>\n","      <td>inconv</td>\n","      <td>problematic</td>\n","      <td>not_recom</td>\n","      <td>not_recom</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12960 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54f605f8-ec14-4d7f-9fc2-57e23e1cd7b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-54f605f8-ec14-4d7f-9fc2-57e23e1cd7b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-54f605f8-ec14-4d7f-9fc2-57e23e1cd7b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["# label encoding"],"metadata":{"id":"fAymFIPdMVwC","executionInfo":{"status":"ok","timestamp":1669354793352,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"7GIDA9HEMYKY","executionInfo":{"status":"ok","timestamp":1669354793771,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["df_dum = pd.get_dummies(df,columns=headers[:-1])"],"metadata":{"id":"EpGpVn9zR-Uy","executionInfo":{"status":"ok","timestamp":1669354839140,"user_tz":-330,"elapsed":491,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":105,"outputs":[]},{"cell_type":"code","source":["df_dum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"uAF4_oODMYHl","executionInfo":{"status":"ok","timestamp":1669354848698,"user_tz":-330,"elapsed":700,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"7b043155-b05b-4c49-b632-382edac34a19"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          NURSERY  parents_great_pret  parents_pretentious  parents_usual  \\\n","0       recommend                   0                    0              1   \n","1        priority                   0                    0              1   \n","2       not_recom                   0                    0              1   \n","3       recommend                   0                    0              1   \n","4        priority                   0                    0              1   \n","...           ...                 ...                  ...            ...   \n","12955  spec_prior                   1                    0              0   \n","12956   not_recom                   1                    0              0   \n","12957  spec_prior                   1                    0              0   \n","12958  spec_prior                   1                    0              0   \n","12959   not_recom                   1                    0              0   \n","\n","       has_nurs_critical  has_nurs_improper  has_nurs_less_proper  \\\n","0                      0                  0                     0   \n","1                      0                  0                     0   \n","2                      0                  0                     0   \n","3                      0                  0                     0   \n","4                      0                  0                     0   \n","...                  ...                ...                   ...   \n","12955                  0                  0                     0   \n","12956                  0                  0                     0   \n","12957                  0                  0                     0   \n","12958                  0                  0                     0   \n","12959                  0                  0                     0   \n","\n","       has_nurs_proper  has_nurs_very_crit  form_complete  ...  \\\n","0                    1                   0              1  ...   \n","1                    1                   0              1  ...   \n","2                    1                   0              1  ...   \n","3                    1                   0              1  ...   \n","4                    1                   0              1  ...   \n","...                ...                 ...            ...  ...   \n","12955                0                   1              0  ...   \n","12956                0                   1              0  ...   \n","12957                0                   1              0  ...   \n","12958                0                   1              0  ...   \n","12959                0                   1              0  ...   \n","\n","       housing_critical  housing_less_conv  finance_convenient  \\\n","0                     0                  0                   1   \n","1                     0                  0                   1   \n","2                     0                  0                   1   \n","3                     0                  0                   1   \n","4                     0                  0                   1   \n","...                 ...                ...                 ...   \n","12955                 1                  0                   0   \n","12956                 1                  0                   0   \n","12957                 1                  0                   0   \n","12958                 1                  0                   0   \n","12959                 1                  0                   0   \n","\n","       finance_inconv  social_nonprob  social_problematic  \\\n","0                   0               1                   0   \n","1                   0               1                   0   \n","2                   0               1                   0   \n","3                   0               0                   0   \n","4                   0               0                   0   \n","...               ...             ...                 ...   \n","12955               1               0                   0   \n","12956               1               0                   0   \n","12957               1               0                   1   \n","12958               1               0                   1   \n","12959               1               0                   1   \n","\n","       social_slightly_prob  health_not_recom  health_priority  \\\n","0                         0                 0                0   \n","1                         0                 0                1   \n","2                         0                 1                0   \n","3                         1                 0                0   \n","4                         1                 0                1   \n","...                     ...               ...              ...   \n","12955                     1                 0                1   \n","12956                     1                 1                0   \n","12957                     0                 0                0   \n","12958                     0                 0                1   \n","12959                     0                 1                0   \n","\n","       health_recommended  \n","0                       1  \n","1                       0  \n","2                       0  \n","3                       1  \n","4                       0  \n","...                   ...  \n","12955                   0  \n","12956                   0  \n","12957                   1  \n","12958                   0  \n","12959                   0  \n","\n","[12960 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-44ca0955-0770-4415-ac10-1cae1b423f60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NURSERY</th>\n","      <th>parents_great_pret</th>\n","      <th>parents_pretentious</th>\n","      <th>parents_usual</th>\n","      <th>has_nurs_critical</th>\n","      <th>has_nurs_improper</th>\n","      <th>has_nurs_less_proper</th>\n","      <th>has_nurs_proper</th>\n","      <th>has_nurs_very_crit</th>\n","      <th>form_complete</th>\n","      <th>...</th>\n","      <th>housing_critical</th>\n","      <th>housing_less_conv</th>\n","      <th>finance_convenient</th>\n","      <th>finance_inconv</th>\n","      <th>social_nonprob</th>\n","      <th>social_problematic</th>\n","      <th>social_slightly_prob</th>\n","      <th>health_not_recom</th>\n","      <th>health_priority</th>\n","      <th>health_recommended</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>recommend</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>priority</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>not_recom</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>recommend</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>priority</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12955</th>\n","      <td>spec_prior</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12956</th>\n","      <td>not_recom</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12957</th>\n","      <td>spec_prior</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12958</th>\n","      <td>spec_prior</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12959</th>\n","      <td>not_recom</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12960 rows × 28 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44ca0955-0770-4415-ac10-1cae1b423f60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-44ca0955-0770-4415-ac10-1cae1b423f60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-44ca0955-0770-4415-ac10-1cae1b423f60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["# training logistic model"],"metadata":{"id":"TugafjTRL1xx","executionInfo":{"status":"ok","timestamp":1669354879446,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(df_dum.drop('NURSERY',axis=1),df.NURSERY,test_size=0.3,random_state=101)"],"metadata":{"id":"sLqYQeYcMFUE","executionInfo":{"status":"ok","timestamp":1669355265315,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":109,"outputs":[]},{"cell_type":"code","source":["print(x_train.shape)\n","print(x_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nRohz0bKPZay","executionInfo":{"status":"ok","timestamp":1669355317658,"user_tz":-330,"elapsed":15,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"d2ea6e1e-2cfc-40e2-bf47-b4a16d95c02b"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["(9072, 27)\n","(3888, 27)\n","(9072,)\n","(3888,)\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","lb = LabelEncoder()\n","y_test = lb.fit_transform(y_test)\n","y_train = lb.fit_transform(y_train)"],"metadata":{"id":"g5xJ2i9fPdTB","executionInfo":{"status":"ok","timestamp":1669355544425,"user_tz":-330,"elapsed":438,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZdxGVE3sMG7t","executionInfo":{"status":"ok","timestamp":1669354711076,"user_tz":-330,"elapsed":15,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"8ppVSRflNZ2U","executionInfo":{"status":"ok","timestamp":1669354713320,"user_tz":-330,"elapsed":14,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ZoziiPiiOUyB","executionInfo":{"status":"ok","timestamp":1669354723536,"user_tz":-330,"elapsed":407,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"AYrt5v8ROqlg","executionInfo":{"status":"ok","timestamp":1669354734505,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lg = LogisticRegression()\n","lg.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8PVHLrw2Oz2D","executionInfo":{"status":"ok","timestamp":1669355581505,"user_tz":-330,"elapsed":1321,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"de09992f-8fe3-456e-c584-c7572d321183"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["y_pred = lg.predict(x_test)"],"metadata":{"id":"QFS_Up6oPO1V","executionInfo":{"status":"ok","timestamp":1669355613972,"user_tz":-330,"elapsed":12,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAdhHsVMWSuv","executionInfo":{"status":"ok","timestamp":1669355619535,"user_tz":-330,"elapsed":16,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"cf89e630-019d-45f4-c013-b12ebd785c7c"},"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 0, ..., 0, 0, 0])"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["# model evaluation"],"metadata":{"id":"CNaPyNK6WT6g","executionInfo":{"status":"ok","timestamp":1669355636994,"user_tz":-330,"elapsed":15,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":116,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","score=accuracy_score(y_test,y_pred)"],"metadata":{"id":"1qWmnV3EWYTG","executionInfo":{"status":"ok","timestamp":1669355737372,"user_tz":-330,"elapsed":13,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":119,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vpzVtzeyWnWs","executionInfo":{"status":"ok","timestamp":1669355742620,"user_tz":-330,"elapsed":14,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"1f1e5619-bee4-4595-9b05-90b5aab6ff12"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6224279835390947"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["# confusion matrix"],"metadata":{"id":"L76UKT4UWx_s","executionInfo":{"status":"ok","timestamp":1669355765694,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":121,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","\n","\n","\n","\n","\n"],"metadata":{"id":"SD4g1c-CW3xL","executionInfo":{"status":"ok","timestamp":1669355833676,"user_tz":-330,"elapsed":447,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}}},"execution_count":123,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(y_test,y_pred)\n","sns.heatmap(cm,annot=True,cmap='Blues',fmt='d')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"blh61xxJXCP9","executionInfo":{"status":"ok","timestamp":1669355922105,"user_tz":-330,"elapsed":708,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"71967efa-2c56-45a8-eb66-1984fb36d279"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f3de8d49d90>"]},"metadata":{},"execution_count":125},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["confusion_matrix(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"APkeHoQkXZbE","executionInfo":{"status":"ok","timestamp":1669355948585,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shafeeq Shafi","userId":"05270435638161828023"}},"outputId":"2c42b018-9b46-4075-fd74-02532cd0f13d"},"execution_count":126,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1291,    0,    0,    0,    0],\n","       [   0, 1129,    0,  109,   13],\n","       [   0,  147,    0, 1099,    0],\n","       [   0,   33,    0,    0,   67],\n","       [   0,    0,    0,    0,    0]])"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":[],"metadata":{"id":"D2jv1msuXkNM"},"execution_count":null,"outputs":[]}]}